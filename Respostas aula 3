Dada uma variável a do tipo char (um byte), escreva os trechos de código em C para: 
(a) Somente setar o bit menos significativo de a. 

  a |= 0x01;
  
(b) Somente setar dois bits de a: o menos significativo e o segundo menos significativo.
  
   a |= 0x03;

(c) Somente zerar o terceiro bit menos significativo de a. 

   a &= 0xFB;

(d) Somente zerar o terceiro e o quarto bits menos significativo de a.

  a &= 0xF3;

(e) Somente inverter o bit mais significativo de a. 

    a ^= 0x80;            " ^= -> XOR "
       
 A B | A^B
 0 0 |  0
 0 1 |  1
 1 0 |  1
 1 1 |  0
  

(f) Inverter o nibble mais significativo de a, e setar o nibble menos significativo de a.

     a ^= 0x80;
     a &= 0x01;

Considerando a placa Launchpad do MSP430, escreva o código em C para piscar os dois LEDs ininterruptamente.

#include <msp430g2553.h>
#define LED1 BIT1
#define LED2 BIT2

void main (void)
{
  WDTCTL = WDTPW|WDTHOLD;
  PIDIR = BIT1 + BIT2;
  POUT = 0;
}

for(;;)
  {
  while((P|IN & BTN) != 0){}
  PIOUT |= LED1+LED2;
  while((P|IN & BTN) == 0){}
  PIOUT |= LED1+LED2;
  }

Considerando a placa Launchpad do MSP430, escreva o código em C para piscar duas vezes os dois LEDs sempre que o usuário pressionar 
o botão.

#include <msp430g2553.h>
#define LED1 BIT1
#define LED2 BIT2

void main (void)
{
  WDTCTL = WDTPW|WDTHOLD;
  PIDIR = BIT1 + BIT2;
  POUT = 0;
}

for(;;)
  {
  while((P|IN & BTN) != 0){}
  PIOUT |= LED1+LED2;
  PIOUT &= ~(LED1+LED2);
  PIOUT |= LED1+LED2;
  PIOUT &= ~(LED1+LED2);
  }

Considerando a placa Launchpad do MSP430, faça uma função em C que pisca os dois LEDs uma vez.

#include <msp430g2553.h>
#define LED1 BIT1
#define LED2 BIT2

void main (void)
{
  WDTCTL = WDTPW|WDTHOLD;
  PIDIR = BIT1 + BIT2;
  POUT = 0;
}

for(;;)
  {
  while((P|IN & BTN) != 0){}
  PIOUT |= LED1+LED2;
  PIOUT &= ~(LED1+LED2);
  }
Reescreva o código da questão 2 usando a função da questão 4.

Reescreva o código da questão 3 usando a função da questão 4.
